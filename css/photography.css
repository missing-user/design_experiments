:root {
  --animd: .25s;
  --glitch-offset: .05em;
  color-scheme: dark;
}

body {
  font-family: 'Roboto', sans-serif;
  margin: 0;
  background-color: black;
  max-width: 1800px;
  margin: auto;
  overflow-x: hidden;
  font-size: 2rem;
}

h1, h2, h3, h4, h5, h6 {
  left: 0;
  right: 0;
  text-align: center;
  z-index: 5;
  color: white;
  mix-blend-mode: exclusion;
  font-weight: 100;
  font-family: 'Libre Barcode 39 Text', cursive;
}

h1 {
  position: sticky;
  top: 30%;
  font-size: 12rem;
  padding-bottom: 15rem;
}

h2 {
  font-size: 8rem;
}

h3 {
  font-size: 6rem;
}

.row {
  display: flex;
  position: relative;
  overflow: hidden;
  margin-bottom: -16.66%;
}

.column {
  flex: 50%;
}

img {
  width: 100%;
  object-fit: cover;
  cursor: pointer;
}

.heroSection {
  margin-bottom: 20rem;
}

.fadein {
  animation: fade_in 0.7s ease-in-out backwards;
}

@keyframes fade_in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.front {
  z-index: 10;
}

::selection {
  background-color: red;
}

.contentSection {
  padding: 12rem 1.5rem;
  position: relative;
}

p {
  color: white;
  text-align: center;
}

#mouse-circle {
  position: absolute;
  width: 64px;
  height: 64px;
  margin: -32px 0px 0px -32px;
  border: 2px solid #fff;
  mix-blend-mode: exclusion;
  border-radius: 50%;
  pointer-events: none !important;
  box-shadow: 0 0 16px rgba(255, 255, 255, 0);
  z-index: 20;
}

#galleryContent {
  position: absolute;
  right: 2rem;
  width: 40%;
}

@media (max-width: 768px) {
  h1 {
    font-size: 3.5rem;
  }
  h2 {
    font-size: 3rem;
  }
  h3 {
    font-size: 2rem;
  }
  body {
    font-size: 1.2rem;
  }
  .contentSection {
    padding: 6rem 1rem;
  }
  #galleryContent {
    display: none;
  }
}

/* curtainjs specific styling */

#canvas {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  height: 100vh;
  opacity: 0;
  transition: opacity 0.5s ease-in .4s;
}

.planes-loaded #canvas {
  opacity: 1;
}

.plane img {
  opacity: 0;
}

.delay1 {
  animation-delay: var(--animd);
}

.delay2 {
  animation-delay: calc(2*var(--animd));
}

.delay3 {
  animation-delay: calc(3*var(--animd));
}

.delay4 {
  animation-delay: calc(4*var(--animd));
}

.delay5 {
  animation-delay: calc(5*var(--animd));
}

.glitch>a {
  color: #fff;
  text-decoration: none;
  transition: all var(--animd);
}

.glitch:hover, .glitch:hover>a, .glitch:focus-within, .glitch:focus-within>a {
  color: rgb(0, 0, 255);
}

.glitch::after, .glitch:before {
  position: absolute;
  content: attr(data-text);
  left: 0;
  mix-blend-mode: screen;
  width: 100%;
  pointer-events: none;
  transition: all var(--animd);
  opacity: 0;
}

.glitch:hover::after, .glitch:focus-within::after {
  transform: translate(var(--glitch-offset), var(--glitch-offset));
  color: rgb(0, 255, 0);
  opacity: 1;
}

.glitch:hover::before, .glitch:focus-within::before {
  transform: translate(var(--glitch-offset), calc(2*var(--glitch-offset)));
  color: rgb(255, 0, 0);
  opacity: 1;
}